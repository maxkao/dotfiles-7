#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""ipython start up scripts for pandas useful methods"""
import pandas as pd
from IPython.display import display


def nearest_x(series, value):
    """valueに指定した値に近い順に並べ替えたSeriesを返す
    args:
        * series: pandas Series
        * value: -3なら3下がったところ
    return:
        * absolute_sub: indexとその偏差がvalueに
                        入ったpandas Series
    """
    # オフセット値の設定
    down = series.max() + value
    # 近い値順にソートして偏差を値とする
    absolute_sub = pd.Series(abs(series - down)).sort_values()
    return absolute_sub


def _less(self, n=10):
    """Append `df.head()` with `df.tail()`"""
    return self.head(n // 2).append(self.tail(n // 2))


def _mirror(self):
    """Append reverse DataFrame"""
    return self.append(self[-2::-1], ignore_index=True)


def _read_tables(*files, **kwargs):
    """ Read general delimited files into DataFrame
    Super function of `pd.read_table()`
    """
    return pd.DataFrame(
        {f: pd.read_table(f, **kwargs).squeeze()
         for f in files})


def _dump(self):
    """print all rows & columns""" ""
    with pd.option_context('display.max_rows', len(self)):
        display(self)


NAMES = [
    ('less', _less),
    ('mirror', _mirror),
    ('nearest_x', nearest_x),
    ('dump', _dump),
]


def main():
    for cl in (pd.DataFrame, pd.Series):
        for name in NAMES:
            setattr(cl, *name)
    setattr(pd, 'read_tables', _read_tables)


if __name__ == '__main__':
    main()
