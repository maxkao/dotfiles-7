#!/bin/bash
# Intall my dotfiles using oneliner
#
# ```
# $ bash -c '$(curl -fsSL raw.githubusercontent.com/u1and0/dotfiles/master/.install/install.zsh)'
#               or
# $ bash -c '$(wget -qO - raw.githubusercontent.com/u1and0/dotfiles/master/.install/install.zsh)'
# ```
# you can also use zsh instead of bash


dotfiles_logo='
      | |     | |  / _(_) |
    __| | ___ | |_| |_ _| | ___  ___
   / _` |/ _ \| __|  _| | |/ _ \/ __|
  | (_| | (_) | |_| | | | |  __/\__ \ 
   \__,_|\___/ \__|_| |_|_|\___||___/ '

read_yn() {
    if [[ -n $ZSH_VERSION ]]; then
        read -q && return 0 || return 1
    else
        read -n1 yn; [[ $yn = [yY] ]] && return 0 || return 1
    fi
}

clone_dot() {
    git clone -b feature/inst --depth 5\
        https://github.com/u1and0/dotfiles.git "${HOME}/dotfiles"
}

replace_dot() {
    mv "${HOME}/dotfiles/.git" "${HOME}" &&
        git reset --hard &&
            rm -rf dotfiles
    git submodule update --init --recursive "${HOME}"
}

pyenv_conda_restore() {
    source "${HOME}/.pyenvrc"
    pyenv install miniconda3-latest

    # Restore my python packages
    conda env create --file "${HOME}/.install/snow-packages.yml"
}

chsh_zsh() {
    sudo chsh "$(whoami)" -s /usr/bin/zsh &&
        echo 'relogin'; /usr/bin/zsh -l
}

main() {
    echo "$dotfiles_logo"

    # Download dotfiles if not dotfiles directory
    # if already cloning to dotfiles in your home dir, then
    # ```
    # $ dotfiles/.install/install
    # ```

    # Cloning & Replacing dotfiles
    printf '\n!!! Replace all dotfles in HOME directory? !!! [y/N]: '
    if [[ ! -d dotfiles ]]; then
        read_yn && echo; clone_dot && replace_dot
    else
        read_yn && echo; replace_dot
    fi

    # Restore my archlinux packages using `bacpac`
    printf '\nRestore whole packages managed by pacman? [y/N]: '
    read_yn && echo; "$HOME"/bacpac/bacpac restore

    # Install python using `pyenv`
    printf '\nInstall my python environment? [y/N]: '
    read_yn && echo; pyenv_conda_restore
    # -----------------------------
    # if not yml file, backup first
    # `conda env export > snow-packages.yml`
    #
    # prefix <name>-packages.yml named to conda-env name
    # same as
    # `conda create -n <name>`
    # -----------------------------

    # Change user shell
    printf '\nChange default shell to zsh? [y/N]: '
    if type zsh > /dev/null 2>&1; then
        read_yn && echo; chsh_zsh
    fi
    exit
}

main
