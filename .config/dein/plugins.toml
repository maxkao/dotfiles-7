# vim:ft=toml
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]  # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]  # カーソル位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]]  # hybrid
repo = 'w0ng/vim-hybrid'

[[plugins]]  # vim-fugitive
repo = 'tpope/vim-fugitive'

[[plugins]]  # vim-gitgutter
repo = 'airblade/vim-gitgutter'

[[plugins]]  # Toml
repo = 'cespare/vim-toml'

[[plugins]]  # Neo Term using `:T <terminal command>`
repo = 'kassio/neoterm'

[[plugins]]  # Japanese doc
repo = 'vim-jp/vimdoc-ja'
hook_add = '''
    set helplang=ja,en
'''

[[plugins]]  # Multi-cursol
repo = 'terryma/vim-multiple-cursors'

[[plugins]]  # Multi highlight
repo = 't9md/vim-quickhl'
hook_add = '''
    nmap <Space>m <Plug>(quickhl-manual-this)
    xmap <Space>m <Plug>(quickhl-manual-this)

    nmap <Space>w <Plug>(quickhl-manual-this-whole-word)
    xmap <Space>w <Plug>(quickhl-manual-this-whole-word)

    nmap <Space>c <Plug>(quickhl-manual-clear)
    vmap <Space>c <Plug>(quickhl-manual-clear)

    nmap <Space>M <Plug>(quickhl-manual-reset)
    xmap <Space>M <Plug>(quickhl-manual-reset)

    nmap <Space>j <Plug>(quickhl-cword-toggle)
    map H <Plug>(operator-quickhl-manual-this-motion)
'''

[[plugins]]  # Commentout plugin use 'Ctrl+/(C-_)'
repo = 'tomtom/tcomment_vim'

[[plugins]]  # Show side bar "NERDTree"
repo = 'scrooloose/nerdtree'
hook_add = 'nnoremap <F5> :NERDTreeToggle<CR>'

[[plugins]]  # Session saveing ':Obsession'
repo = 'tpope/vim-obsession'

[[plugins]]  # Select then 'S'
repo = 'tpope/vim-surround'

[[plugins]]  # Auto-bracket correction
repo = 'jiangmiao/auto-pairs'

[[plugins]]  # Select increasingly larger regions of text using the same key combination
repo = 'terryma/vim-expand-region'
hook_add = '''
    vmap v <Plug>(expand_region_expand)
    vmap <C-v> <Plug>(expand_region_shrink)
'''

[[plugins]]  # python indent
repo = 'hynek/vim-python-pep8-indent'

[[plugins]]  # Faster matcher. Needs cmake & boost: `pacman -S cmake boost`
repo = 'nixprime/cpsm'
build = 'env PY3=ON ./install.sh'

[[plugins]]  # 末尾の全角と半角の空白文字を赤くハイライト
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]  # インデントの可視化
repo = 'Yggdroot/indentLine'

[[plugins]]  # Python completions
repo = 'Shougo/neocomplcache'

[[plugins]]  # Python completions
repo = 'Shougo/neosnippet'
hook_add = '''
" Plugin key-mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
imap <expr><TAB>
\ pumvisible() ? "\<C-n>" :
\ neosnippet#expandable_or_jumpable() ?
\    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For conceal markers.
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
'''

[[plugins]]  # Python snippets completions
repo = 'Shougo/neosnippet-snippets'

[[plugins]]  # Allows you to use <Tab> for all your insert completion needs
repo = 'ervandew/supertab'  # Error occur
# repo = 'metalelf0/supertab'  # Fix error but doesn't work
hook_add = '''
    let g:SuperTabContextDefaultCompletionType = "context"
    let g:SuperTabDefaultCompletionType = "<C-n>"
'''

### Ctags / Gtags ###
[[plugins]]  # A class outline viewer for Vim
repo = 'majutsushi/tagbar'
hook_add = 'nmap <F8> :TagbarToggle<CR>'

# globalコマンドに細工してエラーの原因となっている可能性がある
# [[plugins]]  # Generate ctag/gtag
# repo = 'jsfaint/gen_tags.vim'
# hook_add = '''
#     let g:gen_tags#ctags_auto_gen = 1
#     let g:gen_tags#gtags_auto_gen = 1
# '''

[[plugins]] # Fuzzy Finder for vim
repo = 'junegunn/fzf.vim'
hook_add = '''
    " <C-]>でタグ検索
    nnoremap <silent> [denite]<C-]> :call fzf#vim#tags(expand('<cword>'))<CR>
    " fzfからファイルにジャンプできるようにする
    let g:fzf_buffers_jump = 1
'''

[[plugins]]  # Add support for markdown files in tagbar
repo = 'jszakmeister/markdown2ctags'
hook_add = '''
    let g:tagbar_type_markdown = {
    \ 'ctagstype': 'markdown',
    \ 'ctagsargs' : '-f - --sort=yes',
    \ 'ctagsbin' : '$HOME/.local/share/dein/repos/github.com/jszakmeister/markdown2ctags/markdown2ctags.py',
    \ 'kinds' : [
        \ 's:sections',
        \ 'i:images'
    \ ],
    \ 'sro' : '|',
    \ 'kind2scope' : {
        \ 's' : 'section',
    \ },
    \ 'sort': 0,
    \ }
'''

[[plugins]]  # Manipulating Gist alternate in Vim
repo = 'lambdalisue/vim-gista'

[[plugins]]  # quickly find, substitute, and abbreviate several variations of a word at once.<Paste>
repo = 'tpope/vim-abolish'

[[plugins]]  # pairs of handy bracket mappings http://www.vim.org/scripts/script.php
repo = 'tpope/vim-unimpaired'

[[plugins]]  # Yank History
repo = 'vim-scripts/YankRing.vim'
hook_add='''
    nnoremap <silent> <F9> :YRShow<CR>
    function! YRRunAfterMaps()
        nnoremap Y   :<C-U>YRYankCount 'y$'<CR>
    endfunction
'''

[[plugins]]  # HTML tag completion
repo = 'alvan/vim-closetag'

[[plugins]]  # Place, toggle and display marks.
repo = 'kshenoy/vim-signature'
hook_add='''
    nnoremap <silent> <F3> :SignatureToggle<CR>
'''

[[plugins]]  # Other sources for vim-ref
repo = 'mojako/ref-sources.vim'

[[plugins]]  # javascript manual
repo = 'tokuhirom/jsref'

[[plugins]]  # Jquery manual
repo = 'mustardamus/jqapi'

[[plugins]]  # vim manual
repo = 'thinca/vim-ref'
hook_add = '''
let g:ref_cache_dir               = $HOME . '/.local/share/dein/repos/github.com/thinca/vim-ref/cache'
let g:ref_detect_filetype         = {
            \    'css':        'phpmanual',
            \    'html':       ['phpmanual',  'javascript', 'jquery'],
            \    'javascript': ['javascript', 'jquery'],
            \    'php':        ['phpmanual',  'javascript', 'jquery']
            \}
let g:ref_javascript_doc_path = $HOME . '/.local/share/dein/repos/github.com/tokuhirom/jsref/htdocs'
let g:ref_jquery_doc_path     = $HOME . '/.local/share/dein/repos/github.com/mustardamus/jqapi/jqapi'
" To download the phpmanual, type below on your shell.
" wget http://jp2.php.net/get/php_manual_ja.tar.gz/from/this/mirror ~/.local/share/dein/repos/github.com/thinca/vim-ref/mirror && aunpack mirror
let g:ref_phpmanual_path      = $HOME . '/.local/share/dein/repos/github.com/thinca/vim-ref/php-chunked-xhtml'
let g:ref_use_cache           = 1
let g:ref_use_vimproc         = 1
'''
