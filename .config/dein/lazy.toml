# vim:ft=toml
[[plugins]] # Plugin to easily access Most Recently Used (MRU) files
repo = 'Shougo/neomru.vim'
on_source = 'denite.nvim'
on_path = '.*'

[[plugins]] # Yank
repo = 'Shougo/neoyank.vim'
on_source = 'denite.nvim'
on_event = 'TextYankPost'

[[plugins]] # Dein commands
repo = 'haya14busa/dein-command.vim'
on_source = ['dein.vim']

[[plugins]] # Python completions
repo = 'zchee/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_add = '''
    let g:jedi#completions_command = "<C-N>"

    " 補完で次の候補に進むときにtabを使えるという設定にしたつもりだが動かない
    let g:jedi#use_tabs_not_buffers = 1

    " 1個目の候補が入力されるっていう設定を解除
    let g:jedi#popup_select_first = 0

    " .を入力すると補完が始まるという設定を解除
    let g:jedi#popup_on_dot = 0

    let g:jedi#goto_command = "<leader>d"
    let g:jedi#goto_assignments_command = "<leader>g"
    let g:jedi#goto_definitions_command = ""
    let g:jedi#documentation_command = "K"
    let g:jedi#usages_command = "<leader>n"
    let g:jedi#rename_command = "<leader>r"

    " ポップアップを表示しない
    autocmd FileType python setlocal completeopt-=preview
'''

[[plugins]]
repo = 'lambdalisue/vim-pyenv'
depends = 'jedi-vim'
on_ft = 'python'

[[plugins]]  # Asynchronous Lint Engine
repo = 'w0rp/ale'
on_ft = ['python', 'sh', 'js', 'javascript']
hook_add= '''
" エラー行に表示するマーク
let g:ale_sign_error = '⨉'
let g:ale_sign_warning = '⚠'
" ステータスラインで表示するフォーマットを変更
let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ OK']
" エラー行にカーソルをあわせた際に表示されるメッセージフォーマット
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
" エラー表示の列を常時表示
let g:ale_sign_column_always = 1

" ファイルを開いたときにlint実行
let g:ale_lint_on_enter = 1
" ファイルを保存したときにlint実行
let g:ale_lint_on_save = 1
" 編集中のlintはしない
let g:ale_lint_on_text_changed = 'never'

" lint結果をロケーションリストまたはQuickFixには表示
let g:ale_set_loclist = 0  "Default 1
" let g:ale_set_quickfix = 0
let g:ale_open_list = 1
let g:ale_keep_list_window_open = 0

" Disable completion where available.
let g:ale_completion_enabled = 0

" 有効にするlinter
" Check Python files with flake8 and pylint.
let g:ale_linters = { 'python': ['flake8', 'pylint'],
                    \ 'sh': ['shellcheck'],
                    \ 'javascript': ['eslint'],
                    \ }
" Fix Python files with autopep8 and yapf.
let g:ale_fixers = { 'python': ['autopep8', 'yapf'],
                   \ 'javascript': ['eslint'],
                   \ }
" Disable warnings about trailing whitespace for Python files.
let g:ale_warn_about_trailing_whitespace = 0
let g:ale_fix_on_save = 1

" ALE用プレフィックス
nmap [ale] <Nop>
map <C-q> [ale]
" エラー行にジャンプ
nmap <silent> [ale]<C-k> <Plug>(ale_previous_wrap)
nmap <silent> [ale]<C-j> <Plug>(ale_next_wrap)
'''

[[plugins]]  # Program runner
repo = 'thinca/vim-quickrun'
on_ft = ['python', 'sh']
hook_add = '''
" vimprocで非同期実行
" 成功時にバッファ、失敗時にQuickFixで表示
" 結果表示のサイズ調整など
let g:quickrun_config = {
    \ '_' : {
        \ 'runner' : 'vimproc',
        \ 'runner/vimproc/updatetime' : 40,
        \ 'outputter' : 'error',
        \ 'outputter/error/success' : 'buffer',
        \ 'outputter/error/error'   : 'quickfix',
        \ 'outputter/buffer/split' : ':botright 8sp',
    \ }
\}

" 実行時に前回の表示内容をクローズ&保存してから実行
let g:quickrun_no_default_key_mappings = 1
nmap <Leader>b :QuickRun <CR>
'''
